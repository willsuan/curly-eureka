cmake_minimum_required(VERSION 3.22)
project(cudual LANGUAGES CXX CUDA)
option(CUDUAL_BUILD_EXAMPLES "Build examples" ON)
option(CUDUAL_BUILD_TESTS "Build tests" ON)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CUDA_STANDARD 17)
if(NOT DEFINED CMAKE_CUDA_ARCHITECTURES)
  set(CMAKE_CUDA_ARCHITECTURES 70 75 80 86 89)
endif()
# Allow compile-time tuning for benchmark
set(DEF_N 64 CACHE STRING "Default dimension N for benchmark")
set(DEF_M 2  CACHE STRING "Default outputs M for benchmark")
set(DEF_K 16 CACHE STRING "Default tile K for benchmark")
set(REAL_T double CACHE STRING "Real type for benchmark")
add_library(cudual INTERFACE)
target_include_directories(cudual INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/include)
# Examples
if(CUDUAL_BUILD_EXAMPLES)
  add_executable(benchmark_suite examples/benchmark_suite.cu)
  target_compile_definitions(benchmark_suite PRIVATE DEF_N=${DEF_N} DEF_M=${DEF_M} DEF_K=${DEF_K} REAL_T=${REAL_T})
  target_link_libraries(benchmark_suite PRIVATE cudual)
  set_target_properties(benchmark_suite PROPERTIES CUDA_SEPARABLE_COMPILATION ON)
  add_executable(example_vec_hessian_tiled examples/example_vec_hessian_tiled.cu)
  target_link_libraries(example_vec_hessian_tiled PRIVATE cudual)
  set_target_properties(example_vec_hessian_tiled PROPERTIES CUDA_SEPARABLE_COMPILATION ON)
  add_executable(example_vec_hessian_plan examples/example_vec_hessian_plan.cu)
  target_link_libraries(example_vec_hessian_plan PRIVATE cudual)
  set_target_properties(example_vec_hessian_plan PROPERTIES CUDA_SEPARABLE_COMPILATION ON)
  add_executable(example_vec_hessian_packed examples/example_vec_hessian_packed.cu)
  target_link_libraries(example_vec_hessian_packed PRIVATE cudual)
  set_target_properties(example_vec_hessian_packed PROPERTIES CUDA_SEPARABLE_COMPILATION ON)
endif()
# Tests
if(CUDUAL_BUILD_TESTS)
  enable_testing()
  add_executable(test_minimal_grad_hess tests/test_minimal_grad_hess.cu)
  target_link_libraries(test_minimal_grad_hess PRIVATE cudual)
  add_test(NAME test_minimal_grad_hess COMMAND test_minimal_grad_hess)
  add_executable(test_lgamma_fd tests/test_lgamma_fd.cu)
  target_link_libraries(test_lgamma_fd PRIVATE cudual)
  add_test(NAME test_lgamma_fd COMMAND test_lgamma_fd)
  add_executable(test_logbeta_fd tests/test_logbeta_fd.cu)
  target_link_libraries(test_logbeta_fd PRIVATE cudual)
  add_test(NAME test_logbeta_fd COMMAND test_logbeta_fd)
  add_executable(test_erfcx_fd tests/test_erfcx_fd.cu)
  target_link_libraries(test_erfcx_fd PRIVATE cudual)
  add_test(NAME test_erfcx_fd COMMAND test_erfcx_fd)
endif()
